name: 'Update packages'

on:
  schedule:
    # Runs every minute, between 13:00 and 13:59 UTC
    - cron: '* 13 * * *'

  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  update-packages:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    env:
      GITHUB_TOKEN: "${{ secrets.TOKEN }}"

    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v4
        with:
          repository: "${{ github.repository }}"
          token: "${{ env.GITHUB_TOKEN }}"

      - name: 'Install helper programs'
        shell: bash
        run: |
          export GEM_HOME="$HOME/.gem"
          export PATH="$PATH:$GEM_HOME/bin"

          sudo apt update > /dev/null
          sudo apt install -y sd fish ruby > /dev/null
          gem install bundler

      - name: 'Update package versions'
        shell: bash
        run: |
          export GEM_HOME="$HOME/.gem"
          export PATH="$PATH:$GEM_HOME/bin"

          echo 'Adding executable permissions to `scrape_website`'
          chmod +x ./scripts/scrape_website && cd ./scripts

          echo 'Installing Ruby gems'
          bundler > /dev/null && cd ..

          for i in $(find . -type f -name 'update-script'); do
            chmod +x "$i"
            echo "Executing $i"; eval "$i"
            chmod -x "$i"
          done

          echo 'Removing executable permissions from `scrape_website`'
          chmod -x ./scripts/scrape_website

      - name: 'Commit changes'
        shell: bash
        run: |
          USERNAME='github-actions[bot]'
          EMAIL='41898282+github-actions[bot]@users.noreply.github.com'
          git config --local user.name "$USERNAME"
          git config --local user.email "$EMAIL"
          git add -u
          if [ -n "$(git status --porcelain)" ]; then
            CURRENT_TIME=$(date +'%Y-%m-%d %H:%M:%S')
            git commit -m "bot: Updated packages at $CURRENT_TIME"
          fi

      - name: 'Push changes'
        uses: ad-m/github-push-action@v0.8.0
        with:
          github_token: "${{ env.GITHUB_TOKEN }}"
          branch: "${{ github.ref }}"
