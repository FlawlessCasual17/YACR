#!/usr/bin/env ruby
# frozen_string_literal: true
# typed: true

require 'rest-client'
require 'nokogiri'

# spell-checker: ignore

# Scrapes the website and returns a string of the group captured by the regex.
# @param url [String] The URL to scrape
# @param regex [String] The regular expression to use to extract the data
# @param css_selector [String] The CSS selector to use to extract the data
# @param attribute [String] The attribute to use to extract the data
def scrape_website(url, regex, css_selector, attribute_selector)
  regex_new = Regexp.new(regex)

  # @type [RestClient::Response]
  response = RestClient.get(url)

  # @type [Nokogiri::HTML::Document]
  doc = Nokogiri::HTML(response.body)
  # @type [Nokogiri::XML::NodeSet]
  links = doc.css(css_selector)

  result = nil

  # @param [Nokogiri::XML::Node]
  links.each do |link|
    attribute_value = link.attribute(attribute_selector).value
    match = regex_new.match(attribute_value)

    # rubocop:disable Style/IfUnlessModifier
    if match
      result = match.captures.first
    end
    # rubocop:enable Style/IfUnlessModifier
  end

  puts result
end

scrape_website(ARGV[0], ARGV[1], ARGV[2], ARGV[3])

# Example:
# scrape_website('https://www.tweaking4all.com/home-theatre/rename-my-tv-series-v2/',
#             'RenameMyTVSeries-([\d.]+)-Linux64bit\.tar\.gz', 'a.btn-ok', 'href')
